// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BatterRecordsColumns holds the columns for the "batter_records" table.
	BatterRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "games", Type: field.TypeInt, Default: 0},
		{Name: "avg", Type: field.TypeFloat64, Nullable: true},
		{Name: "plate_appearances", Type: field.TypeInt, Default: 0},
		{Name: "at_bats", Type: field.TypeInt, Default: 0},
		{Name: "runs", Type: field.TypeInt, Default: 0},
		{Name: "hits", Type: field.TypeInt, Default: 0},
		{Name: "singles", Type: field.TypeInt, Default: 0},
		{Name: "doubles", Type: field.TypeInt, Default: 0},
		{Name: "triples", Type: field.TypeInt, Default: 0},
		{Name: "homeruns", Type: field.TypeInt, Default: 0},
		{Name: "walks", Type: field.TypeInt, Default: 0},
		{Name: "rbis", Type: field.TypeInt, Default: 0},
		{Name: "steals", Type: field.TypeInt, Default: 0},
		{Name: "hit_by_pitch", Type: field.TypeInt, Default: 0},
		{Name: "strikeouts", Type: field.TypeInt, Default: 0},
		{Name: "double_plays", Type: field.TypeInt, Default: 0},
		{Name: "slg", Type: field.TypeFloat64, Nullable: true},
		{Name: "obp", Type: field.TypeFloat64, Nullable: true},
		{Name: "ops", Type: field.TypeFloat64, Nullable: true},
		{Name: "bb_k", Type: field.TypeFloat64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "game_batting_records", Type: field.TypeInt},
		{Name: "user_batting_records", Type: field.TypeInt},
	}
	// BatterRecordsTable holds the schema information for the "batter_records" table.
	BatterRecordsTable = &schema.Table{
		Name:       "batter_records",
		Columns:    BatterRecordsColumns,
		PrimaryKey: []*schema.Column{BatterRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "batter_records_games_batting_records",
				Columns:    []*schema.Column{BatterRecordsColumns[23]},
				RefColumns: []*schema.Column{GamesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "batter_records_users_batting_records",
				Columns:    []*schema.Column{BatterRecordsColumns[24]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// GamesColumns holds the columns for the "games" table.
	GamesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "opponent", Type: field.TypeString, Nullable: true},
		{Name: "location", Type: field.TypeString, Nullable: true},
		{Name: "result", Type: field.TypeString, Nullable: true},
		{Name: "my_score", Type: field.TypeInt, Nullable: true},
		{Name: "opponent_score", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_games", Type: field.TypeInt},
	}
	// GamesTable holds the schema information for the "games" table.
	GamesTable = &schema.Table{
		Name:       "games",
		Columns:    GamesColumns,
		PrimaryKey: []*schema.Column{GamesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "games_users_games",
				Columns:    []*schema.Column{GamesColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PitcherRecordsColumns holds the columns for the "pitcher_records" table.
	PitcherRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "games", Type: field.TypeInt, Default: 0},
		{Name: "era", Type: field.TypeFloat64, Nullable: true},
		{Name: "wins", Type: field.TypeInt, Default: 0},
		{Name: "losses", Type: field.TypeInt, Default: 0},
		{Name: "saves", Type: field.TypeInt, Default: 0},
		{Name: "holds", Type: field.TypeInt, Default: 0},
		{Name: "winning_pct", Type: field.TypeFloat64, Nullable: true},
		{Name: "batters_faced", Type: field.TypeInt, Default: 0},
		{Name: "opponent_at_bats", Type: field.TypeInt, Default: 0},
		{Name: "innings", Type: field.TypeFloat64, Default: 0},
		{Name: "hits_allowed", Type: field.TypeInt, Default: 0},
		{Name: "homeruns_allowed", Type: field.TypeInt, Default: 0},
		{Name: "walks", Type: field.TypeInt, Default: 0},
		{Name: "hit_by_pitch", Type: field.TypeInt, Default: 0},
		{Name: "strikeouts", Type: field.TypeInt, Default: 0},
		{Name: "earned_runs", Type: field.TypeInt, Default: 0},
		{Name: "whip", Type: field.TypeFloat64, Nullable: true},
		{Name: "opponent_avg", Type: field.TypeFloat64, Nullable: true},
		{Name: "strikeout_rate", Type: field.TypeFloat64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "game_pitching_records", Type: field.TypeInt},
		{Name: "user_pitching_records", Type: field.TypeInt},
	}
	// PitcherRecordsTable holds the schema information for the "pitcher_records" table.
	PitcherRecordsTable = &schema.Table{
		Name:       "pitcher_records",
		Columns:    PitcherRecordsColumns,
		PrimaryKey: []*schema.Column{PitcherRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "pitcher_records_games_pitching_records",
				Columns:    []*schema.Column{PitcherRecordsColumns[22]},
				RefColumns: []*schema.Column{GamesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "pitcher_records_users_pitching_records",
				Columns:    []*schema.Column{PitcherRecordsColumns[23]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "team", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BatterRecordsTable,
		GamesTable,
		PitcherRecordsTable,
		UsersTable,
	}
)

func init() {
	BatterRecordsTable.ForeignKeys[0].RefTable = GamesTable
	BatterRecordsTable.ForeignKeys[1].RefTable = UsersTable
	GamesTable.ForeignKeys[0].RefTable = UsersTable
	PitcherRecordsTable.ForeignKeys[0].RefTable = GamesTable
	PitcherRecordsTable.ForeignKeys[1].RefTable = UsersTable
}
